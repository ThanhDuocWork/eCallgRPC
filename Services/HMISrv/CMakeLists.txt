cmake_minimum_required(VERSION 3.10)
project(HMISrv)
add_definitions(-Wl,--copy-dt-needed-entries)
set(SOURCES
    ${CMAKE_CURRENT_SOURCE_DIR}/src/HMISrv.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/HMISrvFunc.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp
)

set(HEADERS
    ${CMAKE_CURRENT_SOURCE_DIR}/inc
)

# üîπ Th√™m ƒë∆∞·ªùng d·∫´n ch·ª©a `service.grpc.pb.h`
include_directories(${CMAKE_SOURCE_DIR}/Services/ServiceManager/gencode)

# üîπ Th√™m th∆∞ m·ª•c ch·ª©a c√°c th∆∞ vi·ªán c·∫ßn thi·∫øt
include_directories(
    ${CMAKE_SOURCE_DIR}/Utils/Parameter/inc
    ${CMAKE_SOURCE_DIR}/Utils/Logger/inc
    ${CMAKE_SOURCE_DIR}/Utils/CANBus/inc
)
# üîπ T√¨m th∆∞ vi·ªán Protobuf v√† gRPC tr∆∞·ªõc khi s·ª≠ d·ª•ng
find_package(Protobuf REQUIRED)
find_package(gRPC REQUIRED)

# üîπ T·∫°o executable cho HMISrv
add_executable(HMISrv ${SOURCES})

# üîπ Li√™n k·∫øt HMISrv v·ªõi service_proto v√† c√°c th∆∞ vi·ªán c·∫ßn thi·∫øt
target_link_libraries(HMISrv
    Utils
    service_proto  # S·ª≠ d·ª•ng th∆∞ vi·ªán ƒë√£ t·∫°o t·ª´ ServiceManager
    protobuf::libprotobuf
    gRPC::grpc++
    pthread
)
